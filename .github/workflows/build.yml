name: Bygg og deploy
on:
  workflow_dispatch:
  push:
    branches:
      - "master"
    paths-ignore:
      - "**.md"
      - "**.MD"
      - ".gitignore"
      - ".editorconfig"
      - "LICENCE"
      - "CODEOWNERS"

jobs:
  build-app-k9:
    name: Build [K9]
    permissions:
      contents: read
      packages: write
      id-token: write
    runs-on: "ubuntu-latest"
    env:
      TZ: "Europe/Oslo"
    outputs:
      build-version: ${{ steps.generate-build-version.outputs.build-version }}
      image-ref: ${{ steps.set-image-ref.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up NODE
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # ratchet:actions/setup-node@v3
        with:
          node-version: "22"
          registry-url: https://npm.pkg.github.com/
          scope: "@navikt"

      - name: Enable Corepack
        run: corepack enable

      - name: Configure Yarn for GitHub Packages
        run: |
          yarn config set npmScopes.navikt.npmRegistryServer "https://npm.pkg.github.com"
          yarn config set npmScopes.navikt.npmAlwaysAuth true
          yarn config set npmScopes.navikt.npmAuthToken ${{ secrets.READER_TOKEN }}

      - name: Install dependencies
        run: yarn workspaces focus app

      - name: Build webapp [K9]
        run: yarn workspace app build

      - name: Install dependencies server
        run: yarn workspaces focus server

      - name: Build server
        run: yarn workspace server build

      - name: Copy server node_modules to server folder
        run: cp -r ./node_modules ./server/node_modules

      - name: Copy webapp into public directory of server
        run: cp -r ./app/dist/ ./server/public

      - name: Generate build version
        id: generate-build-version
        run: echo "build-version=k9-$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
      - name: Print build version
        run: echo "Generated build-version is ${{ steps.generate-build-version.outputs.build-version }}"
      - name: Set full image reference
        id: set-image-ref
        run: echo "image=ghcr.io/navikt/k9-inntektsmelding-frontend:${{ steps.generate-build-version.outputs.build-version }}" >> $GITHUB_OUTPUT
      - name: Bygg og push docker image k9saksbehandling
        uses: navikt/sif-gha-workflows/.github/actions/maven/build-push-docker-image@main
        with:
          docker_context: "./server"
          dockerfile: "./server/Dockerfile"
          build-version: ${{ steps.generate-build-version.outputs.build-version }}
          push-image: true

  deploy-dev-k9:
    name: Deploy DEV [K9]
    runs-on: ubuntu-latest
    environment: dev-gcp:k9saksbehandling
    permissions:
      id-token: write
    needs: build-app-k9
    steps:
      - uses: actions/checkout@v5
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .deploy/naiserator.yaml
          VARS: .deploy/dev-gcp-k9saksbehandling.json
          NAMESPACE: k9saksbehandling
          IMAGE: ${{ needs.build-app-k9.outputs.image-ref }}

  deploy-prod-k9:
    if: github.ref == 'refs/heads/master'
    name: Deploy PROD [K9]
    runs-on: ubuntu-latest
    environment: prod-gcp:k9saksbehandling
    permissions:
      id-token: write
    needs: [build-app-k9, deploy-dev-k9]
    steps:
      - uses: actions/checkout@v5
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: .deploy/naiserator.yaml
          VARS: .deploy/prod-gcp-k9saksbehandling.json
          NAMESPACE: k9saksbehandling
          IMAGE: ${{ needs.build-app-k9.outputs.image-ref }}
